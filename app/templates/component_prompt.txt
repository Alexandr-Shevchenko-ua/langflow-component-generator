You must generate ONE minimal Python file that defines EXACTLY this shape:

# <Header comment, one short line>
class <ClassName>Component:
    display_name = "<ShortName>"
    description = "<One sentence>"

    def build(self, <inputs...>) -> <output_type>:
        # input validation
        # core logic
        return <value>

Rules:
- Use ONLY stdlib. No imports unless absolutely required.
- Use a single-line # header; DO NOT use triple-quoted docstrings.
- Typing via inline annotations is OK.
- The file MUST parse with ast.parse().
- Keep <ClassName> in CamelCase, and ALWAYS end class name with "Component".
- The build() method is REQUIRED; no __init__, no run(), no decorators.

User spec:
{{SPEC}}

Return format (STRICT):
Return ONLY one single-line JSON object (no markdown). Fields:
- "filename": string like "components/custom/{{SAFE_SLUG}}_component.py"
- "language": "python"
- "code_lines": array of strings (each element is ONE line of the file, without trailing newline)

Hard constraints:
- Do not include code fences, xml tags, or prose.
- Ensure valid JSON (double quotes, commas).
- Keep the file small and syntactically valid.
- No triple-quoted docstrings; use a single # header line.
- Any text outside the single-line JSON is a fatal error.
- Respect the user's filename if provided.